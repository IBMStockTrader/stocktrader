#       Copyright 2017-2021 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

{{- if .Values.tradr.enabled }}
#Deploy the pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tradr
  labels:
    app: {{ .Release.Name }}-stock-trader
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"{{ .Release.Name }}-broker"}]'
    prism.subkind: Node.js
spec:
  replicas: {{ .Values.tradr.replicas }}
  selector:
    matchLabels:
      app: tradr
      solution: stock-trader
  template:
    metadata:
      labels:
        app: tradr
        solution: stock-trader
      annotations:
        git-repo: "https://github.com/IBMStockTrader/tradr"
{{- if .Values.global.istio }}
        maistra.io/expose-route: 'true'
        sidecar.istio.io/inject: 'true'
{{- end }}
    spec:
      containers:
      - name: tradr
        image: "{{ .Values.tradr.image.repository }}:{{ .Values.tradr.image.tag }}"
        env:
          - name: AUTH_TYPE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: auth.type
          - name: JWT_ISSUER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: jwt.issuer
          - name: JWT_AUDIENCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: jwt.audience
          - name: OIDC_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: oidc.name
          - name: OIDC_ISSUER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: oidc.issuer
          - name: OIDC_AUTH
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: oidc.auth
          - name: OIDC_TOKEN
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: oidc.token
          - name: OIDC_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: oidc.clientId
          - name: OIDC_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: oidc.clientSecret
          - name: OIDC_KEY
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: oidc.key
          - name: PROXY_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: ingress.address
{{- if .Values.global.jsonLogging }}
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: json
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
{{- end }}
        ports:
          - containerPort: 3000
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 128Mi
{{- if .Values.tradr.autoscale }}
---
#Deploy the autoscaler
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-tradr-hpa
  labels:
    app: stock-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-tradr
  minReplicas: {{ .Values.tradr.replicas }}
  maxReplicas: {{ .Values.tradr.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.tradr.cpuThreshold }}
{{- end }}
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-tradr-service
  labels:
    app: tradr
spec:
  type: NodePort
  ports:
    - port: 3000
  selector:
    app: tradr
{{- if .Values.global.ingress }}
---
#Configure the ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
# annotations:
#   ingress.kubernetes.io/rewrite-target: /tradrr
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/affinity: "cookie"
    ingress.kubernetes.io/session-cookie-name: "route"
    ingress.kubernetes.io/session-cookie-hash: "sha1"
    #ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/secure-backends: "true"
    #ingress.kubernetes.io/app-root: "/tradr"
  name: {{ .Release.Name }}-tradr-ingress
spec:
  rules:
  - host:
    http:
      paths:
      - path: /tradr
        backend:
          serviceName: {{ .Release.Name }}-tradr-service
          servicePort: 3000
{{- end }}
{{- if .Values.global.route }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: tradr
  name: {{ .Release.Name }}-tradr
spec:
  port:
    targetPort: http
  tls:
    termination: edge
  to:
    kind: Service
    name: {{ .Release.Name }}-tradr-service
    weight: 100
  wildcardPolicy: None
---
{{- end }}
{{- end }}
