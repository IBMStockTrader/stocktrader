#       Copyright 2017-2020 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

{{- if .Values.trader.enabled }}
#Deploy the pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-trader
  labels:
    app: {{ .Release.Name }}-stock-trader
  annotations:
    prism.subkind: Liberty
spec:
  replicas: {{ .Values.global.replicas }}
  selector:
    matchLabels:
      app: trader
  template:
    metadata:
      labels:
        app: trader
{{- if .Values.global.monitoring }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9080"
{{- end }}
    spec:
      containers:
      - name: trader
        image: "{{ .Values.trader.image.repository }}:{{ .Values.trader.image.tag }}"
        env:
          - name: AUTH_TYPE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: auth.type
          - name: JWT_AUDIENCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: jwt.audience
          - name: JWT_ISSUER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: jwt.issuer
          - name: OIDC_CLIENTID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: oidc.clientId
                optional: true
          - name: OIDC_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: oidc.clientSecret
                optional: true
          - name: OIDC_DISCOVERY_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: oidc.discoveryUrl
                optional: true
          - name: LDAP_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config 
                key: ldap.host
                optional: true
          - name: LDAP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config 
                key: ldap.port
                optional: true
          - name: LDAP_BASE_DN
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config 
                key: ldap.baseDN
                optional: true
          - name: LDAP_REALM
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config 
                key: ldap.realm
                optional: true
          - name: PORTFOLIO_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: portfolio.url
                optional: true
{{- if .Values.global.jsonLogging }}
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: json
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
{{- end }}
        ports:
          - containerPort: 9080
          - containerPort: 9443
        imagePullPolicy: Always
{{- if .Values.global.healthCheck }}
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 90
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
{{- end }}
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 250m
            memory: 250Mi
{{- if .Values.global.autoscale }}
---
#Deploy the autoscaler
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-trader-hpa
  labels:
    app: stock-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-trader
  maxReplicas: 10
  minReplicas: {{ .Values.global.replicas }}
  targetCPUUtilizationPercentage: 60
{{- end }}
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-trader-service
  labels:
    app: trader
{{- if .Values.global.monitoring }}
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: "9080"
{{- end }}
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 9080
      targetPort: 9080
    - name: https
      protocol: TCP
      port: 9443
      targetPort: 9443
  selector:
    app: trader
{{- if .Values.global.ingress }}
---
#Configure the ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-trader-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/affinity: "cookie"
    ingress.kubernetes.io/session-cookie-name: "route"
    ingress.kubernetes.io/session-cookie-hash: "sha1"
    #ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/secure-backends: "true"
    #ingress.kubernetes.io/app-root: "/trader"
spec:
  rules:
  - host:
    http:
      paths:
      - path: /trader
        backend:
          serviceName: {{ .Release.Name }}-trader-service
          servicePort: 9443
{{- end }}
{{- if .Values.global.route }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: trader
  name: {{ .Release.Name }}-trader
spec:
  port:
    targetPort: https
  tls:
    termination: passthrough
  to:
    kind: Service
    name: {{ .Release.Name }}-trader-service
    weight: 100
  wildcardPolicy: None
---
{{- end }}
{{- end }}
