#       Copyright 2017-2020 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

{{- if .Values.notificationSlack.enabled }}
#Deploy the pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-notification-slack
  labels:
    app: {{ .Release.Name }}-stock-trader
  annotations:
    prism.subkind: Liberty
spec:
  replicas: {{ .Values.global.replicas }}
  selector:
    matchLabels:
      app: notification-slack
  template:
    metadata:
      labels:
        app: notification-slack
{{- if .Values.global.monitoring }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9080"
{{- end }}
    spec:
      containers:
      - name: notification-slack
        image: "{{ .Values.notificationSlack.image.repository }}:{{ .Values.notificationSlack.image.tag }}"
        env:
          - name: AUTH_TYPE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: auth.type
          - name: OW_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: openwhisk.url
          - name: OW_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: openwhisk.id
          - name: OW_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-credentials
                key: openwhisk.password
          - name: JWT_AUDIENCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config 
                key: jwt.audience
          - name: JWT_ISSUER
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-config
                key: jwt.issuer
{{- if .Values.global.jsonLogging }}
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: json
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
{{- end }}
        ports:
          - containerPort: 9080
          - containerPort: 9443
        imagePullPolicy: Always
{{- if .Values.global.healthCheck }}
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 30
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 15
{{- end }}
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 128Mi
{{- if .Values.global.autoscale }}
---
#Deploy the autoscaler
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-notification-slack-hpa
  labels:
    app: stock-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-notification-slack
  maxReplicas: 10
  minReplicas: {{ .Values.global.replicas }}
  targetCPUUtilizationPercentage: 60
{{- end }}
{{- end }}
